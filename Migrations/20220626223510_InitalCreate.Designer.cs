// <auto-generated />
using System;
using ArtifactManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArtifactManager.Migrations
{
    [DbContext(typeof(ArtifactManagerContext))]
    [Migration("20220626223510_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArtifactManager.Data.Models.Attribute", b =>
                {
                    b.Property<int>("AttributeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AttributeID");

                    b.HasAlternateKey("Name");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentEntityAttribute", b =>
                {
                    b.Property<int>("CurrentEntityAttributeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeID")
                        .HasColumnType("int");

                    b.Property<string>("AttributeOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.HasKey("CurrentEntityAttributeID");

                    b.HasIndex("AttributeID");

                    b.HasIndex("EntityID");

                    b.ToTable("CurrentEntityAttribute");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentRolePrivilege", b =>
                {
                    b.Property<int>("CurrentRolePrivilegeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PrivelegeID")
                        .HasColumnType("int");

                    b.Property<string>("PrivilegeOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("CurrentRolePrivilegeID");

                    b.HasIndex("PrivelegeID");

                    b.HasIndex("RoleID");

                    b.ToTable("CurrentRolePrivileges");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentUserCategory", b =>
                {
                    b.Property<int>("CurrentUserCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CurrentUserCategoryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("CurrentUserCategories");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentUserRole", b =>
                {
                    b.Property<int>("CurrentUserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("RoleOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CurrentUserRoleID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("CurrentUserRoles");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.Entity", b =>
                {
                    b.Property<int>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int?>("Power")
                        .HasColumnType("int");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.HasKey("EntityID");

                    b.HasAlternateKey("Name");

                    b.HasIndex("CategoryID");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.Privelege", b =>
                {
                    b.Property<int>("PrivelegeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PrivelegeID");

                    b.ToTable("Priveleges");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "Guest"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "User"
                        },
                        new
                        {
                            RoleID = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("UserID");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = "Admin-10",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentEntityAttribute", b =>
                {
                    b.HasOne("ArtifactManager.Data.Models.Attribute", "Attribute")
                        .WithMany("CurrentEntityAttributes")
                        .HasForeignKey("AttributeID");

                    b.HasOne("ArtifactManager.Data.Models.Entity", "Entity")
                        .WithMany("CurrentEntityAttributes")
                        .HasForeignKey("EntityID");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentRolePrivilege", b =>
                {
                    b.HasOne("ArtifactManager.Data.Models.Privelege", "Privelege")
                        .WithMany("CurrentRolePrivileges")
                        .HasForeignKey("PrivelegeID");

                    b.HasOne("ArtifactManager.Data.Models.Role", "Role")
                        .WithMany("CurrentRolePrivileges")
                        .HasForeignKey("RoleID");
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentUserCategory", b =>
                {
                    b.HasOne("ArtifactManager.Data.Models.Category", "Category")
                        .WithMany("CurrentUserCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArtifactManager.Data.Models.User", "User")
                        .WithMany("CurrentUserCategories")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.CurrentUserRole", b =>
                {
                    b.HasOne("ArtifactManager.Data.Models.Role", "Role")
                        .WithMany("CurrentUserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArtifactManager.Data.Models.User", "User")
                        .WithMany("CurrentUserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArtifactManager.Data.Models.Entity", b =>
                {
                    b.HasOne("ArtifactManager.Data.Models.Category", "Category")
                        .WithMany("Entities")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
